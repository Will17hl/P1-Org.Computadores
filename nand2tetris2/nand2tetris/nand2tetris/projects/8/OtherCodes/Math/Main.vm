function Main.divide 2 
    push constant 0 // Cosent
    pop local 0

label LOOP_DIV
    push argument 0 // Dividend
    push argument 1 // Divider

    lt
    if-goto STOP_DIV

    // sub Dividend-Divider
    push argument 0
    push argument 1
    sub
    pop argument 0
    
    // add Cosent+1
    push local 0
    push constant 1
    add
    pop local 0
    goto LOOP_DIV

label STOP_DIV
    push local 0
    return

// ----------------------------- MULTIPLICATION ------------------------------------------

function Main.mult 2
    push constant 0
    pop local 0
    push constant 0
    pop local 1

    push argument 0
    push argument 1

    gt
    if-goto LOOP_MULT1 // x>y
    goto LOOP_MULT2

label LOOP_MULT1
    push local 0
    push argument 1

    eq
    if-goto STOP_MULT

    push local 1
    push argument 0
    add
    pop local 1

    push local 0
    push constant 1
    add
    pop local 0
    goto LOOP_MULT1

label LOOP_MULT2
    push local 0
    push argument 0

    eq
    if-goto STOP_MULT

    push local 1
    push argument 1
    add
    pop local 1

    push local 0
    push constant 1
    add
    pop local 0
    goto LOOP_MULT2

label STOP_MULT
    push local 1
    return



